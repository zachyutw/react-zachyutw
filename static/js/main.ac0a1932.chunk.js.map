{"version":3,"sources":["contexts/Global/GlobalContext.js","contexts/Auth/AuthContext.js","serviceWorker.js","routes/Routes.js","utils/displayLocalStorageInfo.js","index.js","utils/disabledHoverEffectInMobile.js"],"names":["Context","createContext","Provider","withRouter","props","_useState","useState","_useState2","Object","_Users_po_yingyu_Documents_GitHub_201807Projects_react_zachyutw_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","state","setState","_useState3","_useState4","activedSection","setActiveSection","window","pushG","history","push","replaceG","replace","_onChange","useCallback","e","data","actionType","isIntoView","id","useEffect","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","value","_Users_po_yingyu_Documents_GitHub_201807Projects_react_zachyutw_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onChange","children","firebase","firebaseApp","apiKey","authDomain","appID","reducer","action","name","payload","initState","localStorageSafe","getItem","condition","error","message","_useReducer","useReducer","_useReducer2","slicedToArray","user","setUser","setAccessToken","signInWithEmailAndPasswordAction","_ref","email","password","auth","signInWithEmailAndPassword","then","res","currentUser","getIdToken","token","catch","err","console","log","_ref2","sendEmailVerification","updateProfile","_ref3","createUserWithEmailAndPassword","signOut","_onLoad","arguments","length","undefined","pathname","react_default","onLoad","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","HomePage","React","lazy","Promise","all","__webpack_require__","bind","homeRoute","main","path","url","to","Routes","react_router","react","fallback","assign","component","_xLen","_x","_lsTotal","localStorage","hasOwnProperty","substr","toFixed","displayLocalStorageInfo","document","documentElement","maxTouchPoints","msMaxTouchPoints","si","styleSheets","styleSheet","rules","ri","selectorText","deleteRule","ex","disabledHoverEffectInMobile","ReactDOM","render","react_router_dom","GlobalContext","AuthContext_Provider","routes_Routes","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac0a1932.chunk.js","sourcesContent":["import React, { createContext, useState, useCallback, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import _ from 'lodash';\n// import useWindowScroll from '../../hooks/useWindowScroll';\nconst Context = createContext({});\n\nexport const Provider = withRouter(props => {\n  const [state, setState] = useState({});\n  const [activedSection, setActiveSection] = useState('introduction');\n  // const { scrollMoving, wheelEvent } = useWindowScroll(true, 1000);\n  window.pushG = props.history.push;\n  window.replaceG = props.history.replace;\n  const _onChange = useCallback((e, data) => {\n    switch (data.actionType) {\n      case 'sectionIntoView':\n        if (data.isIntoView) {\n          setActiveSection(data.id);\n        }\n        break;\n      default:\n        break;\n    }\n  }, []);\n  useEffect(() => {\n    // window.addEventListener('touchstart', handleOnScroll, detectIt.passiveEvents ? { passive: true } : false);\n    // window.addEventListener('scroll', handleOnScroll, detectIt.passiveEvents ? { passive: true } : false);\n    // return () => {\n    //     window.removeEventListener('touchstart', handleOnScroll);\n    //     window.removeEventListener('scroll', handleOnScroll);\n    // };\n  }, []);\n  return (\n    <Context.Provider\n      value={{ ...state, setState, onChange: _onChange, activedSection }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n});\n\nexport const withContext = Componet => props => {\n  return (\n    <Provider>\n      <Componet {...props} />\n    </Provider>\n  );\n};\n\nexport default Context;\n","import React, { createContext, useCallback, useReducer, useEffect, useState } from 'react';\nimport localStorageSafe from 'zach-local-storage-safe';\nimport _ from 'lodash';\nimport * as firebaseApp from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebase = firebaseApp.initializeApp({\n    apiKey: 'AIzaSyDBxx4lyOoBJDpKlLS7ye_IomI1O4UVsME',\n    authDomain: 'project-id.firebaseapp.com',\n    appID: '1:571377425932:web:f7a9159544dcfbffc2d829'\n});\n\n// firebase.auth().currentUser.getIdToken(true).then((idTokern) => {\n//     console.log(idTokern);\n// });\nconst Context = createContext({});\n\nconst signInWithEmailAndPassword = (setAccessToken, setUser) => ({ email, password }) => {\n    firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then((res) => {\n            const user = firebase.auth().currentUser;\n            setUser(user);\n            user.getIdToken(false).then((token) => {\n                setAccessToken(token);\n            });\n        })\n        .catch((err) => {\n            console.log(err, 'err');\n        });\n};\n\nconst updateProfile = (user) => (data) => {\n    try {\n        user.updateProfile(data).then(function (){});\n    } catch (err) {\n        console.log(err);\n    }\n};\nconst sendEmailVerification = (user) => ({ email }) => {\n    try {\n        user.sendEmailVerification().then(() => {\n            console.log('send');\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\nconst createUserWithEmailAndPassword = () => ({ email, password }) => {\n    try {\n        firebase.auth().createUserWithEmailAndPassword(email, password);\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nconst signOut = () => () => {\n    try {\n        firebase.auth().signOut();\n    } catch (err) {\n        console.log(err);\n    }\n};\nconst providerData = (user) => () => {\n    try {\n        user.providerData.forEach(function (profile){\n            console.log('Sign-in provider: ' + profile.providerId);\n            console.log('  Provider-specific UID: ' + profile.uid);\n            console.log('  Name: ' + profile.displayName);\n            console.log('  Email: ' + profile.email);\n            console.log('  Photo URL: ' + profile.photoURL);\n        });\n    } catch (err) {}\n};\nconst reducer = (state, action) => {\n    const { name, payload, actionType } = action;\n    switch (actionType) {\n        default:\n            return state;\n    }\n};\n\nconst initState = {\n    data: localStorageSafe.getItem('eventData', 'object'),\n    condition: { error: { message: null } }\n};\nexport const Provider = (props) => {\n    const [ state, dispatch ] = useReducer(reducer, initState);\n    const [ user, setUser ] = useState({});\n    const [ accessToken, setAccessToken ] = useState('');\n\n    const signInWithEmailAndPasswordAction = useCallback(signInWithEmailAndPassword(setAccessToken, setUser), [ setAccessToken, setUser ]);\n    const sendEmailVerificationAction = useCallback(sendEmailVerification(user), [ user ]);\n    const updateProfileAction = useCallback(updateProfile(user), [ user ]);\n    const createUserWithEmailAndPasswordAction = useCallback(createUserWithEmailAndPassword(), []);\n    const signOutAction = useCallback(signOut(), []);\n    useEffect(\n        () => {\n            signInWithEmailAndPasswordAction({ email: 'flyboring@gmail.com', password: 'Ru1735' });\n        },\n        [ signInWithEmailAndPasswordAction ]\n    );\n\n    const _onLoad = useCallback((data = {}) => {\n        const { pathname, actionType } = data;\n        switch (pathname) {\n            default:\n                break;\n        }\n        switch (actionType) {\n            default:\n                break;\n        }\n    }, []);\n    const _onChange = useCallback((e, data) => {\n        switch (data.actionType) {\n            default:\n                break;\n        }\n    }, []);\n\n    return <Context.Provider value={{ state, onChange: _onChange, onLoad: _onLoad }}>{props.children}</Context.Provider>;\n};\n\nexport const withContext = (Componet) => (props) => {\n    return (\n        <Provider>\n            <Componet {...props} />\n        </Provider>\n    );\n};\n\nexport default Context;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nconst HomePage = React.lazy(() => import('../components/Pages/HomePage/HomePage'));\n\nexport const homeRoute = {\n    main: { path: '/:target?', name: 'home', url: '/', to: '/' }\n};\nexport const navMainFields = [ homeRoute ];\nconst Routes = () => {\n    return (\n        <Switch>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Route {...homeRoute.main} component={HomePage} />\n            </Suspense>\n        </Switch>\n    );\n};\nexport default Routes;\n","const displayLocalStorageInfo = () => {\n  let _lsTotal = 0,\n    _xLen,\n    _x;\n  for (_x in localStorage) {\n    if (!localStorage.hasOwnProperty(_x)) {\n      continue;\n    }\n    _xLen = (localStorage[_x].length + _x.length) * 2;\n    _lsTotal += _xLen;\n    console.log(_x.substr(0, 50) + ' = ' + (_xLen / 1024).toFixed(2) + ' KB');\n  }\n  console.log('Total = ' + (_lsTotal / 1024).toFixed(2) + ' KB');\n};\n\nexport default displayLocalStorageInfo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport './index.scss';\nimport { Provider as GlobalProvider } from './contexts/Global/GlobalContext';\nimport { Provider as AuthProvider } from './contexts/Auth/AuthContext';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes/Routes';\nimport disabledHoverEffectInMobile from './utils/disabledHoverEffectInMobile';\nimport displayLocalStorageInfo from './utils/displayLocalStorageInfo';\n\ndisplayLocalStorageInfo();\ndisabledHoverEffectInMobile();\n\nReactDOM.render(\n    <BrowserRouter>\n        <GlobalProvider>\n            <AuthProvider>\n                <Routes />\n            </AuthProvider>\n        </GlobalProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export default () => {\n  const hasTouch = () => {\n    return (\n      'ontouchstart' in document.documentElement ||\n      navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0\n    );\n  };\n  if (hasTouch()) {\n    // remove all :hover stylesheets\n    try {\n      // prevent exception on browsers not supporting DOM styleSheets properly\n      for (var si in document.styleSheets) {\n        var styleSheet = document.styleSheets[si];\n        if (!styleSheet.rules) continue;\n\n        for (var ri = styleSheet.rules.length - 1; ri >= 0; ri--) {\n          if (!styleSheet.rules[ri].selectorText) continue;\n\n          if (styleSheet.rules[ri].selectorText.match(':hover')) {\n            styleSheet.deleteRule(ri);\n          }\n        }\n      }\n    } catch (ex) {}\n  }\n};\n"],"sourceRoot":""}