{"version":3,"sources":["components/Scene/SceneSquardIntro/SceneSquardIntro.module.css","components/Scene/SceneStringItem/SceneStringItem.js","hooks/useIsScrolledIntoView.js","components/Scene/SceneSquardIntro/SceneSquardIntro.js"],"names":["module","exports","sceneContainer","sceneContainer2","wrapper","scene","scenejs-editor-timeline","SceneStringItem","_ref","item","name","value","_ref$onChange","onChange","itemName","handleOnChange","useCallback","e","_onChange","Object","defineProperty","itemOnChange","react_default","a","createElement","onClick","data-typing","style","length","left","fontSize","concat","right","_","capitalize","isInViewport","el","arguments","undefined","getBoundingClientRect","t","top","h","height","window","innerHeight","useIsScrolledIntoView","ref","_useState","useState","_useState2","slicedToArray","isIntoView","setIsIntoView","handleOnScroll","current","console","log","useEffect","addEventListener","removeEventListener","SKILLS","linkUrl","swagPosNeg","deg","pos","result","Math","floor","random","SceneSquardIntro","_ref$skills","skills","useRef","containerRef","sScene","setScene","initSceneElPosition","node","topLeftNum","topRightNum","toConsumableArray","childNodes","forEach","div","innerText","offsetHeight","movingEls","move","totalHeight","startTime","endTime","index","max","Scene",".scene","selector","getItem","rotate","scale","set","kineticFrame","transform","moveItem","reduce","config","_ref2","typing","text","duration","setPlaySpeed","setEasing","setIterationCount","play","load","pause","className","s","data-inview","map","Scene_SceneStringItem_SceneStringItem","data","key"],"mappings":"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","file":"static/js/5.09a65bb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sceneContainer\":\"SceneSquardIntro_sceneContainer__3iSLX\",\"sceneContainer2\":\"SceneSquardIntro_sceneContainer2__8XrmP\",\"wrapper\":\"SceneSquardIntro_wrapper__3S3dl\",\"scene\":\"SceneSquardIntro_scene__3IWiv\",\"scenejs-editor-timeline\":\"SceneSquardIntro_scenejs-editor-timeline__1R804\"};","import React, { useCallback } from 'react';\nimport _ from 'lodash';\nconst itemOnChange = (onChange, name, value, item) => e => {\n  onChange(e, { [name]: value, item });\n};\nconst SceneStringItem = ({ item, name, value, onChange = () => {} }) => {\n  const { name: itemName } = item;\n  const handleOnChange = useCallback(\n    itemOnChange(onChange, name, value, item),\n    [item, name, value]\n  );\n  return (\n    <div\n      onClick={handleOnChange}\n      data-typing={itemName}\n      style={\n        itemName.length > 7\n          ? { left: '0', fontSize: `${2 * (1 + 2 / itemName.length)}rem` }\n          : { right: '0', fontSize: `${2 * (1 + 2 / itemName.length)}rem` }\n      }\n    >\n      {_.capitalize(itemName)}\n    </div>\n  );\n};\n\nexport default SceneStringItem;\n","import { useState, useCallback, useEffect } from 'react';\nconst isInViewport = (el, { top: t, height: h } = el.getBoundingClientRect()) =>\n  t <= window.innerHeight && t + h >= 0;\nconst useIsScrolledIntoView = (ref, name = 'default') => {\n  const [isIntoView, setIsIntoView] = useState(false);\n  const handleOnScroll = useCallback(() => {\n    setIsIntoView(isInViewport(ref.current));\n    console.log(isInViewport(ref.current), name);\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', handleOnScroll);\n    return () => {\n      window.removeEventListener('scroll', handleOnScroll);\n    };\n  }, [ref]);\n  return isIntoView;\n};\nexport default useIsScrolledIntoView;\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport Scene from 'scenejs';\nimport { kineticFrame, typing } from '@scenejs/effects';\nimport s from './SceneSquardIntro.module.css';\nimport _ from 'lodash';\nimport SceneStringItem from '../../Scene/SceneStringItem/SceneStringItem';\nimport useIsScrolledIntoView from '../../../hooks/useIsScrolledIntoView';\nconst SKILLS = [\n  { name: 'javascript', linkUrl: '' },\n  { name: 'react', linkUrl: '' },\n  { name: 'react-hook', linkUrl: '' },\n  { name: 'react-context', linkUrl: '' },\n  { name: 'redux', linkUrl: '' },\n  { name: 'react-testing-library', linkUrl: '' },\n  { name: 'jest', linkUrl: '' },\n  { name: 'scss', linkUrl: '' },\n  { name: 'socketIO', linkUrl: '' },\n  { name: 'css-module', linkUrl: '' },\n  { name: 'semantic-ui', linkUrl: '' },\n  { name: 'nodejs', linkUrl: '' },\n  { name: 'express', linkUrl: '' },\n  { name: 'mongoose', linkUrl: '' },\n  { name: 'geomap', linkUrl: '' },\n  { name: 'mapbox', linkUrl: '' },\n  { name: 'html5', linkUrl: '' },\n  { name: 'webrtc', linkUrl: '' },\n  { name: 'websocket', linkUrl: '' },\n  { name: 'scenejs', linkUrl: '' }\n];\n/**\n * @author zachyu.tw\n * @\n * @referenceFrom Daybrush codepen scenejs example\n * @see https://codepen.io/daybrush/pen/MMyORm\n *\n */\nconst moveItem = item => (startTime, endTime, left, top, rotate, scale) => {\n  item.set({\n    [`${startTime}, ${endTime}`]: kineticFrame({\n      left: `${left}px`,\n      top: `${top}px`\n    }).set({\n      transform: {\n        rotate: `${rotate}deg`,\n        scale\n      }\n    })\n  });\n};\n\nconst swagPosNeg = deg => {\n  const pos = deg,\n    neg = 5;\n  let result = 0;\n  result = Math.floor(Math.random() * (pos + neg)) - neg;\n  result = result < 0 ? result : result + 1;\n  return result;\n};\n\nconst SceneSquardIntro = ({ skills = SKILLS }) => {\n  const ref = useRef(null);\n  const containerRef = useRef(null);\n  const isIntoView = useIsScrolledIntoView(containerRef, 'scenes');\n  const [sScene, setScene] = useState(null);\n  const initSceneElPosition = useCallback(ref => {\n    const node = ref.current;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    [...node.childNodes].forEach(div => {\n      if (div.innerText.length > 7) {\n        div.style.top = topLeftNum + 'px';\n        topLeftNum = topLeftNum + div.offsetHeight;\n      } else {\n        div.style.top = topRightNum + 'px';\n        topRightNum = topRightNum + div.offsetHeight;\n      }\n    });\n  }, []);\n  const movingEls = useCallback(move => {\n    let totalHeight = 0;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    let startTime = 0;\n    let endTime = 0;\n    [...ref.current.childNodes].forEach((div, index) => {\n      if (div.innerText.length > 7) {\n        move(startTime, endTime, 100, 200 - topLeftNum, swagPosNeg(2), 1.2);\n        startTime = endTime + 1;\n        endTime = startTime;\n        topLeftNum = topLeftNum + div.offsetHeight;\n      } else {\n        move(startTime, endTime, -50, 200 - topRightNum, swagPosNeg(2), 1);\n        startTime = endTime + 1;\n        endTime = startTime;\n        topRightNum = topRightNum + div.offsetHeight;\n      }\n    });\n    totalHeight = Math.max(topRightNum, topLeftNum);\n    containerRef.current.style.height = totalHeight + 14 * 2 + 'px';\n\n    move(startTime, endTime, 0, 0, 0, 1);\n  }, []);\n  useEffect(() => {\n    const scene = new Scene({ '.scene': {} }, { selector: true });\n    const item = scene.getItem('.scene');\n    initSceneElPosition(ref);\n    movingEls(moveItem(item));\n    scene.set(\n      skills.reduce((config, { name }, index) => {\n        config[`[data-typing=${name}]`] = {\n          [index]: typing({ text: _.capitalize(name), duration: 1 })\n        };\n        return config;\n      }, {})\n    );\n    scene.setPlaySpeed(1.5);\n    scene.setEasing('ease-in-out');\n    scene.setIterationCount('1');\n\n    scene.play();\n    setScene(scene);\n  }, []);\n  useEffect(() => {\n    if (sScene) {\n      console.log(isIntoView);\n      if (isIntoView) {\n        sScene.load();\n        sScene.play();\n      } else {\n        sScene.pause();\n      }\n    }\n  }, [isIntoView]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={s.sceneContainer}\n      data-inview={isIntoView}\n    >\n      <div className={s.wrapper}>\n        <div ref={ref} className=\"scene\">\n          {skills.map(item => {\n            const { name } = item;\n            return (\n              <SceneStringItem\n                onChange={(e, data) => {\n                  console.log(data);\n                }}\n                key={name}\n                item={item}\n                name=\"skill\"\n                value={item}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n/**\n * @example\n *   const SceneSquardIntro = () => {\n *  useEffect(() => {\n *      const scene = new Scene({ '.scene': {} }, { selector: true });\n *      const item = scene.getItem('.scene');\n *      const move = moveItem(item);\n *      move(0, 0, 90, 115, 0, 5);\n *      move(1, 1, 90, 115, 0, 2);\n *      move(2, 3, 0, 115, 0, 1);\n *      move(4, 4.5, -100, 0, -90, 2);\n *      move(5.5, 6, -52, -18, -90, 1.6);\n *      move(7, 7.5, 30, 45, 0, 2);\n *      move(8.5, 9, 10, 30, 0, 3);\n *      move(10, 10.5, 28, 0, 0, 2.2);\n *      move(11.5, 12, 50, -35, 0, 1.65);\n *      move(13, 13.5, 35, -70, 0, 2);\n *      move(14.5, 18, 0, 0, 0, 1);\n *      scene.set({\n *          \"[data-typing='i']\": typing({ text: 'I ', duration: 1 }),\n *          \"[data-typing='frontend']\": {\n *              1: typing({ text: \"'m Front-End\", duration: 1 })\n *          },\n *          \"[data-typing='engineer']\": {\n *              1.5: typing({ text: 'Engineer', duration: 1 })\n *          },\n *          \"[data-typing='with']\": {\n *              3.3: typing({ text: 'with', duration: 0.5 })\n *          },\n *          \"[data-typing='javascript']\": {\n *              4.5: typing({ text: 'JavaScript', duration: 1 })\n *          },\n *          \"[data-typing='typescript']\": {\n *              6: typing({ text: 'TypeScript', duration: 1 })\n *          },\n *          \"[data-typing='css']\": {\n *              7.5: typing({ text: 'CSS', duration: 0.7 })\n *          },\n *          \"[data-typing='nodejs']\": {\n *              9: typing({ text: 'Node.js', duration: 1 })\n *          },\n *          \"[data-typing='animation']\": {\n *              10.5: typing({ text: 'Animation', duration: 1 })\n *          },\n *          \"[data-typing='scenejs']\": {\n *              12: typing({ text: 'Scene.js', duration: 1 })\n *          }\n *      });\n *      scene.setPlaySpeed(2);\n *      scene.setEasing('ease-in-out');\n *      scene.setIterationCount('1');\n *      scene.play();\n *  }, []);\n *  return (\n *      <div className={s.sceneContainer2}>\n *          <div className={s.wrapper}>\n *              <div className='scene'>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='i' style={{ top: '0', left: '50px' }}>\n *                      I\n *                  </a>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='frontend'>\n *                      'm Front-End\n *                  </a>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='engineer'>\n *                      Engineer\n *                  </a>\n *                  <p data-typing='with'>with</p>\n *                  <p data-typing='javascript'>JavaScript</p>\n *                  <p data-typing='typescript'>TypeScript</p>\n *                  <p data-typing='css'>CSS</p>\n *                  <p data-typing='nodejs'>Node.js</p>\n *                  <p data-typing='animation'>Animation</p>\n *                  <a href='https://github.com/daybrush/scenejs' target='_blank' data-typing='scenejs'>\n *                      Scene.js\n *                  </a>\n *              </div>\n *          </div>\n *      </div>\n *  );};\n */\n\nexport default SceneSquardIntro;\n"],"sourceRoot":""}