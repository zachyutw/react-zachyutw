{"version":3,"sources":["components/Scene/SceneSquardIntro/SceneSquardIntro.module.css","components/Pages/HomePage/advanceSkills.md","components/Scene/SceneStringItem/SceneStringItem.js","components/Scene/SceneSquardIntro/SceneSquardIntro.js","components/Modules/Markdown/Markdown.js","components/Pages/HomePage/SkillsBox.js"],"names":["module","exports","sceneContainer","sceneContainer2","wrapper","scene","scenejs-editor-timeline","__webpack_require__","p","SceneStringItem","_ref","item","name","value","_ref$onChange","onChange","itemName","handleOnChange","useCallback","e","_onChange","Object","defineProperty","itemOnChange","react_default","a","createElement","onClick","data-typing","style","length","left","fontSize","concat","right","SKILLS","linkUrl","swagPosNeg","deg","_","chain","times","n","sample","SceneSquardIntro","_ref$skills","skills","ref","useRef","containerRef","isIntoView","useIsScrolledIntoView","_useState","useState","_useState2","slicedToArray","sScene","setScene","initSceneElPosition","node","current","topLeftNum","topRightNum","toConsumableArray","childNodes","forEach","div","innerText","top","offsetHeight","movingEls","move","totalHeight","startTime","endTime","index","Math","max","height","useEffect","Scene",".scene","selector","getItem","rotate","scale","set","kineticFrame","transform","moveItem","reduce","config","_ref2","typing","text","duration","setPlaySpeed","setEasing","setIterationCount","play","console","log","load","pause","className","s","data-inview","map","Scene_SceneStringItem_SceneStringItem","data","key","Markdown","asyncSource","mdString","setMdString","fetch","then","resp","with_html_default","source","SkillsBox","SectionContainer","id","Scene_SceneSquardIntro_SceneSquardIntro","Modules_Markdown_Markdown","advanceSkillsMd"],"mappings":"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","file":"static/js/8.927807cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sceneContainer\":\"SceneSquardIntro_sceneContainer__3iSLX\",\"sceneContainer2\":\"SceneSquardIntro_sceneContainer2__8XrmP\",\"wrapper\":\"SceneSquardIntro_wrapper__3S3dl\",\"scene\":\"SceneSquardIntro_scene__3IWiv\",\"scenejs-editor-timeline\":\"SceneSquardIntro_scenejs-editor-timeline__1R804\"};","module.exports = __webpack_public_path__ + \"static/media/advanceSkills.7597c071.md\";","import React, { useCallback } from 'react';\n// import _ from 'lodash';\nconst itemOnChange = (onChange, name, value, item) => e => {\n  onChange(e, { [name]: value, item });\n};\nconst SceneStringItem = ({ item, name, value, onChange = () => {} }) => {\n  const { name: itemName } = item;\n  const handleOnChange = useCallback(\n    itemOnChange(onChange, name, value, item),\n    [item, name, value]\n  );\n  return (\n    <div\n      onClick={handleOnChange}\n      data-typing={itemName}\n      style={\n        itemName.length > 7\n          ? { left: '0', fontSize: `${1.1 * (1 + 2 / itemName.length)}rem` }\n          : { right: '0', fontSize: `${1.1 * (1 + 2 / itemName.length)}rem` }\n      }\n    >\n      {itemName}\n    </div>\n  );\n};\n\nexport default SceneStringItem;\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport Scene from 'scenejs';\nimport { kineticFrame, typing } from '@scenejs/effects';\nimport s from './SceneSquardIntro.module.css';\nimport _ from 'lodash';\nimport SceneStringItem from '../../Scene/SceneStringItem/SceneStringItem';\n// import useIsScrolledIntoView from '../../../hooks/useIsScrolledIntoView';\nimport useIsScrolledIntoView from 'react-use-is-scrolled-into-view';\nconst GROUP_BY_TEXT_LENGTH = 7;\nconst SKILLS = [\n  { name: 'javascript', linkUrl: '' },\n  { name: 'react', linkUrl: '' },\n  { name: 'react-hook', linkUrl: '' },\n  { name: 'react-context', linkUrl: '' },\n  { name: 'redux', linkUrl: '' },\n  { name: 'react-testing-library', linkUrl: '' },\n  { name: 'jest', linkUrl: '' },\n  { name: 'scss', linkUrl: '' },\n  { name: 'socketIO', linkUrl: '' },\n  { name: 'css-module', linkUrl: '' },\n  { name: 'semantic-ui', linkUrl: '' },\n  { name: 'nodejs', linkUrl: '' },\n  { name: 'express', linkUrl: '' },\n  { name: 'mongoose', linkUrl: '' },\n  { name: 'geomap', linkUrl: '' },\n  { name: 'mapbox', linkUrl: 'https://lasfu.com' },\n  { name: 'html5', linkUrl: '' },\n  { name: 'webrtc', linkUrl: '' },\n  { name: 'websocket', linkUrl: '' },\n  { name: 'scenejs', linkUrl: '' },\n  { name: 'rollup', linkUrl: '' },\n  { name: 'webpack', linkUrl: '' },\n  { name: 'google-colud-fuction', linkUrl: '' },\n  { name: 'puppteer-cheerio', linkUrl: '' }\n];\n/**\n * @author zachyu.tw\n * @\n * @referenceFrom Daybrush codepen scenejs example\n * @see https://codepen.io/daybrush/pen/MMyORm\n *\n */\nconst moveItem = item => (startTime, endTime, left, top, rotate, scale) => {\n  item.set({\n    [`${startTime}, ${endTime}`]: kineticFrame({\n      left: `${left}px`,\n      top: `${top}px`\n    }).set({\n      transform: {\n        rotate: `${rotate}deg`,\n        scale\n      }\n    })\n  });\n};\n\nconst swagPosNeg = deg =>\n  _.chain(deg * 2 + 1)\n    .times(n => n - deg)\n    .sample()\n    .value();\nconst SceneSquardIntro = ({ skills = SKILLS }) => {\n  const ref = useRef(null);\n  const containerRef = useRef(null);\n  const isIntoView = useIsScrolledIntoView(containerRef, 'scenes');\n  const [sScene, setScene] = useState(null);\n  const initSceneElPosition = useCallback(ref => {\n    const node = ref.current;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    [...node.childNodes].forEach(div => {\n      if (div.innerText.length > GROUP_BY_TEXT_LENGTH) {\n        div.style.top = topLeftNum + 'px';\n        topLeftNum = topLeftNum + div.offsetHeight;\n      } else {\n        div.style.top = topRightNum + 'px';\n        topRightNum = topRightNum + div.offsetHeight;\n      }\n    });\n  }, []);\n  const movingEls = useCallback(move => {\n    let totalHeight = 0;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    let startTime = 0;\n    let endTime = 0;\n    [...ref.current.childNodes].forEach((div, index) => {\n      if (div.innerText.length > GROUP_BY_TEXT_LENGTH) {\n        move(startTime, endTime, 100, 200 - topLeftNum, swagPosNeg(2), 1.2);\n        startTime = endTime + 1;\n        endTime = startTime;\n        topLeftNum = topLeftNum + div.offsetHeight;\n      } else {\n        move(startTime, endTime, -50, 200 - topRightNum, swagPosNeg(2), 1);\n        startTime = endTime + 1;\n        endTime = startTime;\n        topRightNum = topRightNum + div.offsetHeight;\n      }\n    });\n    totalHeight = Math.max(topRightNum, topLeftNum);\n    containerRef.current.style.height = totalHeight + 14 * 2 + 'px';\n    move(startTime, endTime, 0, 0, 0, 1);\n  }, []);\n  useEffect(() => {\n    const scene = new Scene({ '.scene': {} }, { selector: true });\n    const item = scene.getItem('.scene');\n    initSceneElPosition(ref);\n    movingEls(moveItem(item));\n    scene.set(\n      skills.reduce((config, { name }, index) => {\n        config[`[data-typing=${name}]`] = {\n          [index]: typing({ text: name, duration: 1 })\n        };\n        return config;\n      }, {})\n    );\n    scene.setPlaySpeed(2);\n    scene.setEasing('ease-in-out');\n    scene.setIterationCount('1');\n\n    scene.play();\n    setScene(scene);\n  }, []);\n  useEffect(() => {\n    if (sScene) {\n      console.log(isIntoView);\n      if (isIntoView) {\n        sScene.load();\n        sScene.play();\n      } else {\n        sScene.pause();\n      }\n    }\n  }, [isIntoView]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={s.sceneContainer}\n      data-inview={isIntoView}\n    >\n      <div className={s.wrapper}>\n        <div ref={ref} className=\"scene\">\n          {skills.map(item => {\n            const { name } = item;\n            return (\n              <SceneStringItem\n                onChange={(e, data) => {\n                  console.log(data);\n                }}\n                key={name}\n                item={item}\n                name=\"skill\"\n                value={item}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n/**\n * @example\n *   const SceneSquardIntro = () => {\n *  useEffect(() => {\n *      const scene = new Scene({ '.scene': {} }, { selector: true });\n *      const item = scene.getItem('.scene');\n *      const move = moveItem(item);\n *      move(0, 0, 90, 115, 0, 5);\n *      move(1, 1, 90, 115, 0, 2);\n *      move(2, 3, 0, 115, 0, 1);\n *      move(4, 4.5, -100, 0, -90, 2);\n *      move(5.5, 6, -52, -18, -90, 1.6);\n *      move(7, 7.5, 30, 45, 0, 2);\n *      move(8.5, 9, 10, 30, 0, 3);\n *      move(10, 10.5, 28, 0, 0, 2.2);\n *      move(11.5, 12, 50, -35, 0, 1.65);\n *      move(13, 13.5, 35, -70, 0, 2);\n *      move(14.5, 18, 0, 0, 0, 1);\n *      scene.set({\n *          \"[data-typing='i']\": typing({ text: 'I ', duration: 1 }),\n *          \"[data-typing='frontend']\": {\n *              1: typing({ text: \"'m Front-End\", duration: 1 })\n *          },\n *          \"[data-typing='engineer']\": {\n *              1.5: typing({ text: 'Engineer', duration: 1 })\n *          },\n *          \"[data-typing='with']\": {\n *              3.3: typing({ text: 'with', duration: 0.5 })\n *          },\n *          \"[data-typing='javascript']\": {\n *              4.5: typing({ text: 'JavaScript', duration: 1 })\n *          },\n *          \"[data-typing='typescript']\": {\n *              6: typing({ text: 'TypeScript', duration: 1 })\n *          },\n *          \"[data-typing='css']\": {\n *              7.5: typing({ text: 'CSS', duration: 0.7 })\n *          },\n *          \"[data-typing='nodejs']\": {\n *              9: typing({ text: 'Node.js', duration: 1 })\n *          },\n *          \"[data-typing='animation']\": {\n *              10.5: typing({ text: 'Animation', duration: 1 })\n *          },\n *          \"[data-typing='scenejs']\": {\n *              12: typing({ text: 'Scene.js', duration: 1 })\n *          }\n *      });\n *      scene.setPlaySpeed(2);\n *      scene.setEasing('ease-in-out');\n *      scene.setIterationCount('1');\n *      scene.play();\n *  }, []);\n *  return (\n *      <div className={s.sceneContainer2}>\n *          <div className={s.wrapper}>\n *              <div className='scene'>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='i' style={{ top: '0', left: '50px' }}>\n *                      I\n *                  </a>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='frontend'>\n *                      'm Front-End\n *                  </a>\n *                  <a href='https://github.com/daybrush' target='_blank' data-typing='engineer'>\n *                      Engineer\n *                  </a>\n *                  <p data-typing='with'>with</p>\n *                  <p data-typing='javascript'>JavaScript</p>\n *                  <p data-typing='typescript'>TypeScript</p>\n *                  <p data-typing='css'>CSS</p>\n *                  <p data-typing='nodejs'>Node.js</p>\n *                  <p data-typing='animation'>Animation</p>\n *                  <a href='https://github.com/daybrush/scenejs' target='_blank' data-typing='scenejs'>\n *                      Scene.js\n *                  </a>\n *              </div>\n *          </div>\n *      </div>\n *  );};\n */\n\nexport default SceneSquardIntro;\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nconst Markdown = ({ asyncSource }) => {\n  const [mdString, setMdString] = useState('');\n  useEffect(() => {\n    fetch(asyncSource)\n      .then(resp => resp.text())\n      .then(text => {\n        setMdString(text);\n      });\n  });\n  return <ReactMarkdown source={mdString} />;\n};\n\nexport default Markdown;\n","import React from 'react';\nimport SectionContainer from '../../Modules/SectionContainer/SectionContainer';\nimport SceneSquardIntro from '../../Scene/SceneSquardIntro/SceneSquardIntro';\nimport Markdown from '../../Modules/Markdown/Markdown';\nimport advanceSkillsMd from './advanceSkills.md';\nconst SKILLS = 'skills';\nconst SkillsBox = () => {\n  return (\n    <SectionContainer id={SKILLS}>\n      <div>\n        <h2>Skills</h2>\n        <SceneSquardIntro />\n        <Markdown asyncSource={advanceSkillsMd} />\n      </div>\n    </SectionContainer>\n  );\n};\n\nexport default SkillsBox;\n"],"sourceRoot":""}