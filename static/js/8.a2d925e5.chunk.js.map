{"version":3,"sources":["components/Scene/SceneSquardIntro/SceneSquardIntro.module.css","components/Pages/HomePage/advanceSkills.md","components/Scene/SceneStringItem/SceneStringItem.js","components/Scene/SceneSquardIntro/SceneSquardIntro.js","components/Modules/Markdown/Markdown.js","components/Pages/HomePage/SkillsBox.js"],"names":["module","exports","sceneContainer","sceneContainer2","wrapper","scene","scenejs-editor-timeline","__webpack_require__","p","SceneStringItem","_ref","item","name","value","_ref$onChange","onChange","itemName","handleOnChange","useCallback","e","_onChange","Object","defineProperty","itemOnChange","react_default","a","createElement","onClick","data-typing","style","length","left","fontSize","concat","right","SKILLS","url","swagPosNeg","deg","_","chain","times","n","sample","SceneSquardIntro","_ref$skills","skills","ref","useRef","containerRef","isIntoView","useIsScrolledIntoView","_useState","useState","_useState2","slicedToArray","sScene","setScene","useEffect","Scene",".scene","selector","getItem","node","current","topLeftNum","topRightNum","toConsumableArray","childNodes","forEach","div","innerText","top","offsetHeight","initSceneElPosition","move","totalHeight","startTime","endTime","index","Math","max","height","movingEls","rotate","scale","set","kineticFrame","transform","moveItem","reduce","config","_ref2","typing","text","duration","setPlaySpeed","setEasing","setIterationCount","play","load","pause","className","s","data-inview","map","Scene_SceneStringItem_SceneStringItem","data","console","log","key","Markdown","asyncSource","mdString","setMdString","fetch","then","resp","with_html_default","source","SkillsBox","SectionContainer","id","Scene_SceneSquardIntro_SceneSquardIntro","Modules_Markdown_Markdown","advanceSkillsMd"],"mappings":"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","file":"static/js/8.a2d925e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sceneContainer\":\"SceneSquardIntro_sceneContainer__3iSLX\",\"sceneContainer2\":\"SceneSquardIntro_sceneContainer2__8XrmP\",\"wrapper\":\"SceneSquardIntro_wrapper__3S3dl\",\"scene\":\"SceneSquardIntro_scene__3IWiv\",\"scenejs-editor-timeline\":\"SceneSquardIntro_scenejs-editor-timeline__1R804\"};","module.exports = __webpack_public_path__ + \"static/media/advanceSkills.7597c071.md\";","import React, { useCallback } from 'react';\n// import _ from 'lodash';\nconst itemOnChange = (onChange, name, value, item) => e => {\n  onChange(e, { [name]: value, item });\n};\nconst SceneStringItem = ({ item, name, value, onChange = () => {} }) => {\n  const { name: itemName } = item;\n  const handleOnChange = useCallback(\n    itemOnChange(onChange, name, value, item),\n    [item, name, value]\n  );\n  return (\n    <div\n      onClick={handleOnChange}\n      data-typing={itemName}\n      style={\n        itemName.length > 7\n          ? { left: '0', fontSize: `${1.1 * (1 + 2 / itemName.length)}rem` }\n          : { right: '0', fontSize: `${1.1 * (1 + 2 / itemName.length)}rem` }\n      }\n    >\n      {itemName}\n    </div>\n  );\n};\n\nexport default SceneStringItem;\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport Scene from 'scenejs';\nimport { kineticFrame, typing } from '@scenejs/effects';\nimport s from './SceneSquardIntro.module.css';\nimport _ from 'lodash';\nimport SceneStringItem from '../../Scene/SceneStringItem/SceneStringItem';\n// import useIsScrolledIntoView from '../../../hooks/useIsScrolledIntoView';\nimport useIsScrolledIntoView from 'react-use-is-scrolled-into-view';\nconst GROUP_BY_TEXT_LENGTH = 7;\nconst SKILLS = [\n    { name: 'javascript', url: '' },\n    { name: 'react', url: '' },\n    { name: 'react-hook', url: '' },\n    { name: 'react-context', url: '' },\n    { name: 'redux', url: '' },\n    { name: 'react-testing-library', url: '' },\n    { name: 'jest', url: '' },\n    { name: 'scss', url: '' },\n    { name: 'socketIO', url: '' },\n    { name: 'css-module', url: '' },\n    { name: 'semantic-ui', url: '' },\n    { name: 'nodejs', url: '' },\n    { name: 'express', url: '' },\n    { name: 'mongoose', url: '' },\n    { name: 'geomap', url: '' },\n    { name: 'mapbox', url: 'https://lasfu.com' },\n    { name: 'html5', url: '' },\n    { name: 'webrtc', url: '' },\n    { name: 'websocket', url: '' },\n    { name: 'scenejs', url: '' },\n    { name: 'rollup', url: '' },\n    { name: 'webpack', url: '' },\n    { name: 'google-colud-fuction', url: '' },\n    { name: 'puppteer-cheerio', url: '' }\n];\n/**\n * @author zachyu.tw\n * @\n * @referenceFrom Daybrush codepen scenejs example\n * @see https://codepen.io/daybrush/pen/MMyORm\n *\n */\nconst moveItem = (item) => (startTime, endTime, left, top, rotate, scale) => {\n    item.set({\n        [`${startTime}, ${endTime}`]: kineticFrame({\n            left: `${left}px`,\n            top: `${top}px`\n        }).set({\n            transform: {\n                rotate: `${rotate}deg`,\n                scale\n            }\n        })\n    });\n};\n\nconst swagPosNeg = (deg) => _.chain(deg * 2 + 1).times((n) => n - deg).sample().value();\n\nconst movingEls = (ref, containerRef, move) => {\n    let totalHeight = 0;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    let startTime = 0;\n    let endTime = 0;\n    [ ...ref.current.childNodes ].forEach((div, index) => {\n        if (div.innerText.length > GROUP_BY_TEXT_LENGTH) {\n            move(startTime, endTime, 100, 200 - topLeftNum, swagPosNeg(2), 1.2);\n            startTime = endTime + 1;\n            endTime = startTime;\n            topLeftNum = topLeftNum + div.offsetHeight;\n        } else {\n            move(startTime, endTime, -50, 200 - topRightNum, swagPosNeg(2), 1);\n            startTime = endTime + 1;\n            endTime = startTime;\n            topRightNum = topRightNum + div.offsetHeight;\n        }\n    });\n    totalHeight = Math.max(topRightNum, topLeftNum);\n    containerRef.current.style.height = totalHeight + 14 * 2 + 'px';\n    move(startTime, endTime, 0, 0, 0, 1);\n};\n\nconst initSceneElPosition = (ref) => {\n    const node = ref.current;\n    let topLeftNum = 0;\n    let topRightNum = 0;\n    [ ...node.childNodes ].forEach((div) => {\n        if (div.innerText.length > GROUP_BY_TEXT_LENGTH) {\n            div.style.top = topLeftNum + 'px';\n            topLeftNum = topLeftNum + div.offsetHeight;\n        } else {\n            div.style.top = topRightNum + 'px';\n            topRightNum = topRightNum + div.offsetHeight;\n        }\n    });\n};\nconst SceneSquardIntro = ({ skills = SKILLS }) => {\n    const ref = useRef(null);\n    const containerRef = useRef(null);\n    const isIntoView = useIsScrolledIntoView(containerRef, 'scenes');\n    const [ sScene, setScene ] = useState(null);\n\n    useEffect(() => {\n        const scene = new Scene({ '.scene': {} }, { selector: true });\n        const item = scene.getItem('.scene');\n        initSceneElPosition(ref);\n        movingEls(ref, containerRef, moveItem(item));\n        scene.set(\n            skills.reduce((config, { name }, index) => {\n                config[`[data-typing=${name}]`] = {\n                    [index]: typing({ text: name, duration: 1 })\n                };\n                return config;\n            }, {})\n        );\n        scene.setPlaySpeed(2);\n        scene.setEasing('ease-in-out');\n        scene.setIterationCount('1');\n\n        scene.play();\n        setScene(scene);\n    }, []);\n    useEffect(\n        () => {\n            if (sScene) {\n                if (isIntoView) {\n                    sScene.load();\n                    sScene.play();\n                } else {\n                    sScene.pause();\n                }\n            }\n        },\n        [ isIntoView ]\n    );\n\n    return (\n        <div ref={containerRef} className={s.sceneContainer} data-inview={isIntoView}>\n            <div className={s.wrapper}>\n                <div ref={ref} className='scene'>\n                    {skills.map((item) => {\n                        const { name } = item;\n                        return (\n                            <SceneStringItem\n                                onChange={(e, data) => {\n                                    console.log(data);\n                                }}\n                                key={name}\n                                item={item}\n                                name='skill'\n                                value={item}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SceneSquardIntro;\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nconst Markdown = ({ asyncSource }) => {\n  const [mdString, setMdString] = useState('');\n  useEffect(() => {\n    fetch(asyncSource)\n      .then(resp => resp.text())\n      .then(text => {\n        setMdString(text);\n      });\n  });\n  return <ReactMarkdown source={mdString} />;\n};\n\nexport default Markdown;\n","import React from 'react';\nimport SectionContainer from '../../Modules/SectionContainer/SectionContainer';\nimport SceneSquardIntro from '../../Scene/SceneSquardIntro/SceneSquardIntro';\nimport Markdown from '../../Modules/Markdown/Markdown';\nimport advanceSkillsMd from './advanceSkills.md';\nconst SKILLS = 'skills';\nconst SkillsBox = () => {\n  return (\n    <SectionContainer id={SKILLS}>\n      <div>\n        <h2>Skills</h2>\n        <SceneSquardIntro />\n        <Markdown asyncSource={advanceSkillsMd} />\n      </div>\n    </SectionContainer>\n  );\n};\n\nexport default SkillsBox;\n"],"sourceRoot":""}